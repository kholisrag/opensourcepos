version: '2'

volumes:
    uploads:
        driver: local
    logs:
        driver: local

networks:
    app_net:
    db_net:

services:
    sqlscript:
        build:
            context: database/
            dockerfile: Dockerfile

    ospos:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: ospos
        restart: always
        depends_on:
          - mysql
        expose:
          - "80"
        networks:
          - app_net
          - db_net
        volumes:
          - uploads:/app/public/uploads
          - logs:/app/application/logs
        env_file: common.env

    mysql:
        image: mariadb:10.3
        container_name: mysql
        restart: always
        expose:
          - "3306"
        networks:
          - db_net
        volumes_from:
          - sqlscript
        volumes: 
          - ./database/docker_mysql.cnf:/etc/mysql/conf.d/docker_mysql.cnf
        env_file: common.env

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: always
        depends_on:
          - mysql
        expose:
          - "80"
        networks:
          - app_net
          - db_net
        env_file: common.env

    nginx:
        image: nginx:1.15-alpine
        container_name: nginx
        restart: always
        depends_on:
          - ospos
          - phpmyadmin
          - certbot
        volumes:
          - ./docker/data/nginx/nginx.tmpl:/etc/nginx/nginx.tmpl:ro
          - ./docker/data/nginx/error_log.log:/etc/nginx/error_log.log
          - ./docker/data/certbot/conf:/etc/letsencrypt:ro
          - ./docker/data/certbot/www:/var/www/certbot:ro
        ports:
          - "80:80"
          - "443:443"
          - "8000:8000"
        networks:
          - app_net
        env_file: common.env
        command: "/bin/sh -c 'envsubst < /etc/nginx/nginx.tmpl > /etc/nginx/nginx.conf & while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

    certbot:
        image: certbot/certbot
        container_name: certbot
        restart: always
        volumes:
          - ./docker/data/certbot/conf:/etc/letsencrypt
          - ./docker/data/certbot/www:/var/www/certbot
        networks:
          - app_net
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
